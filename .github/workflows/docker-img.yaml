name: Build and publish container

on:
  release:
    types:
      - published
  push:
    branches:
      - main
      - master
  pull_request:
    branches:
      - main
      - master

env:
  REGISTRY: ghcr.io

jobs:
  ghr_push:
    name: Build and publish container
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container registry
        if: github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name == github.repository
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Dockerfile.logo
        run: docker buildx build --output . -f Dockerfile.logo .

      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ github.repository }}
          flavor: |
            # don't set latest flavor since it is handled by the raw latest tag
            latest=false
          tags: |
            # set tags for pushes to branches
            type=ref,event=branch
            # set tags for pull requests
            type=ref,event=pr
            # set tags for releases
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            # set latest tag for default branch
            type=raw,value=latest,enable={{is_default_branch}}
      - name: Build and push Docker image
        if: github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name == github.repository
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64, linux/arm64
